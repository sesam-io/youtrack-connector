{
  "_id": "{{@ system @}}",
  "headers": {
    "Authorization": "Bearer $SECRET(api_key)"
  },
  "operations": {
    "groups-list": {
      "id_expression": "{{ id }}",
      "method": "GET",
      "next_page_link": "{{url}}",
      "next_page_termination_strategy": [
        "empty-result"
      ],
      "params": {
        "$skip": "{% if is_first_page  %}0{% else %}{{previous_params['$top'] * page}}{% endif %}",
        "$top": 50,
        "fields": "id,ringId,name,usersCount,teamForProject(name,shortName)"
      },
      "url": "api/groups"
    },
    "hubprojects-delete": {
      "method": "DELETE",
      "url": "hub/rest/projects/{{ id }}"
    },
    "hubprojects-insert": {
      "method": "POST",
      "url": "hub/rest/projects"
    },
    "hubprojects-list": {
      "id_expression": "{{ id }}",
      "method": "GET",
      "next_page_link": "{{url}}",
      "next_page_termination_strategy": [
        "empty-result"
      ],
      "params": {
        "$skip": "{% if is_first_page  %}0{% else %}{{previous_params['$top'] * page}}{% endif %}",
        "$top": 50,
        "fields": ""
      },
      "payload_property": "projects",
      "url": "hub/rest/projects"
    },
    "hubprojects-lookup": {
      "id_expression": "{{ id }}",
      "method": "GET",
      "params": {
        "fields": ""
      },
      "url": "hub/rest/projects/{{ id }}"
    },
    "hubprojects-update": {
      "method": "POST",
      "url": "hub/rest/projects/{{ id }}"
    },
    "issues-delete": {
      "method": "DELETE",
      "url": "api/issues/{{ id }}"
    },
    "issues-insert": {
      "method": "POST",
      "url": "api/issues"
    },
    "issues-list": {
      "id_expression": "{{ id }}",
      "method": "GET",
      "params": {
        "fields": "id,attachments(id),comments(id),created,description,externalIssue(id),isDraft,links(id),parent(id),project(id),resolved,subtasks(id),reporter(id),updated,aggregation,directed,name,readOnly,sourceToTarget,targetToSource"
      },
      "url": "api/issues"
    },
    "issues-lookup": {
      "id_expression": "{{ id }}",
      "method": "GET",
      "params": {
        "fields": "id,attachments(id),comments(id),created,description,externalIssue(id),isDraft,links(id),parent(id),project(id),resolved,subtasks(id),reporter(id),updated,aggregation,directed,name,readOnly,sourceToTarget,targetToSource"
      },
      "url": "api/issues/{{ id }}"
    },
    "issues-update": {
      "method": "POST",
      "url": "api/issues/{{ id }}"
    },
    "organizationroles-list": {
      "id_expression": "{{ id }}",
      "method": "GET",
      "next_page_link": "{{url}}",
      "next_page_termination_strategy": [
        "empty-result"
      ],
      "params": {
        "$skip": "{% if is_first_page  %}0{% else %}{{previous_params['$top'] * page}}{% endif %}",
        "$top": 50,
        "fields": ""
      },
      "payload_property": "organizationroles",
      "url": "hub/rest/organizationroles"
    },
    "organizationroles-lookup": {
      "id_expression": "{{ id }}",
      "method": "GET",
      "params": {
        "fields": ""
      },
      "url": "hub/rest/organizationroles/{{ id }}"
    },
    "organizations-delete": {
      "method": "DELETE",
      "url": "hub/rest/organizations/{{ id }}"
    },
    "organizations-insert": {
      "method": "POST",
      "url": "hub/rest/organizations"
    },
    "organizations-list": {
      "id_expression": "{{ id }}",
      "method": "GET",
      "next_page_link": "{{url}}",
      "next_page_termination_strategy": [
        "empty-result"
      ],
      "params": {
        "$skip": "{% if is_first_page  %}0{% else %}{{previous_params['$top'] * page}}{% endif %}",
        "$top": 50,
        "fields": ""
      },
      "payload_property": "organizations",
      "url": "hub/rest/organizations"
    },
    "organizations-lookup": {
      "id_expression": "{{ id }}",
      "method": "GET",
      "params": {
        "fields": ""
      },
      "url": "hub/rest/organizations/{{ id }}"
    },
    "organizations-update": {
      "method": "POST",
      "url": "hub/rest/organizations/{{ id }}"
    },
    "projectroles-list": {
      "id_expression": "{{ id }}",
      "method": "GET",
      "next_page_link": "{{url}}",
      "next_page_termination_strategy": [
        "empty-result"
      ],
      "params": {
        "$skip": "{% if is_first_page  %}0{% else %}{{previous_params['$top'] * page}}{% endif %}",
        "$top": 50,
        "fields": ""
      },
      "payload_property": "projectroles",
      "url": "hub/rest/projectroles"
    },
    "projectroles-lookup": {
      "id_expression": "{{ id }}",
      "method": "GET",
      "params": {
        "fields": ""
      },
      "url": "hub/rest/projectroles/{{ id }}"
    },
    "projects-delete": {
      "method": "DELETE",
      "url": "api/admin/projects/{{ id }}"
    },
    "projects-insert": {
      "method": "POST",
      "url": "api/admin/projects"
    },
    "projects-list": {
      "id_expression": "{{ id }}",
      "method": "GET",
      "next_page_link": "{{url}}",
      "next_page_termination_strategy": [
        "empty-result"
      ],
      "params": {
        "$skip": "{% if is_first_page  %}0{% else %}{{previous_params['$top'] * page}}{% endif %}",
        "$top": 42,
        "fields": "id,ringId,name,shortName,archived,createdBy(login,name,id),description,iconUrl,leader(login,name,id),team(id),template,key"
      },
      "url": "api/admin/projects"
    },
    "projects-lookup": {
      "id_expression": "{{ id }}",
      "method": "GET",
      "params": {
        "fields": "id,ringId,name,shortName,archived,createdBy(login,name,id),description,iconUrl,leader(login,name,id),team(id),template,key"
      },
      "url": "api/admin/projects/{{ id }}"
    },
    "projects-update": {
      "method": "POST",
      "url": "api/admin/projects/{{ id }}"
    },
    "roles-delete": {
      "method": "DELETE",
      "url": "hub/rest/roles/{{ id }}"
    },
    "roles-insert": {
      "method": "POST",
      "url": "hub/rest/roles"
    },
    "roles-list": {
      "id_expression": "{{ id }}",
      "method": "GET",
      "next_page_link": "{{url}}",
      "next_page_termination_strategy": [
        "empty-result"
      ],
      "params": {
        "$skip": "{% if is_first_page  %}0{% else %}{{previous_params['$top'] * page}}{% endif %}",
        "$top": 50,
        "fields": ""
      },
      "payload_property": "roles",
      "url": "hub/rest/roles"
    },
    "roles-lookup": {
      "id_expression": "{{ id }}",
      "method": "GET",
      "params": {
        "fields": ""
      },
      "url": "hub/rest/roles/{{ id }}"
    },
    "roles-update": {
      "method": "POST",
      "url": "hub/rest/roles/{{ id }}"
    },
    "usergroups-delete": {
      "method": "DELETE",
      "url": "hub/rest/usergroups/{{ id }}"
    },
    "usergroups-insert": {
      "method": "POST",
      "url": "hub/rest/usergroups"
    },
    "usergroups-list": {
      "id_expression": "{{ id }}",
      "method": "GET",
      "next_page_link": "{{url}}",
      "next_page_termination_strategy": [
        "empty-result"
      ],
      "params": {
        "$skip": "{% if is_first_page  %}0{% else %}{{previous_params['$top'] * page}}{% endif %}",
        "$top": 50,
        "fields": ""
      },
      "payload_property": "usergroups",
      "url": "hub/rest/usergroups"
    },
    "usergroups-lookup": {
      "id_expression": "{{ id }}",
      "method": "GET",
      "params": {
        "fields": ""
      },
      "url": "hub/rest/usergroups/{{ id }}"
    },
    "usergroups-update": {
      "method": "POST",
      "url": "hub/rest/usergroups/{{ id }}"
    },
    "users-delete": {
      "method": "DELETE",
      "url": "hub/rest/users/{{ id }}"
    },
    "users-insert": {
      "method": "POST",
      "url": "hub/rest/users"
    },
    "users-list": {
      "id_expression": "{{ id }}",
      "method": "GET",
      "next_page_link": "{{url}}",
      "next_page_termination_strategy": [
        "empty-result"
      ],
      "params": {
        "$skip": "{% if is_first_page  %}0{% else %}{{previous_params['$top'] * page}}{% endif %}",
        "$top": 50,
        "fields": ""
      },
      "payload_property": "users",
      "url": "hub/rest/users"
    },
    "users-lookup": {
      "id_expression": "{{ id }}",
      "method": "GET",
      "params": {
        "fields": ""
      },
      "url": "hub/rest/users/{{ id }}"
    },
    "users-update": {
      "method": "POST",
      "url": "hub/rest/users/{{ id }}"
    },
    "usersyoutrack-list": {
      "id_expression": "{{ id }}",
      "method": "GET",
      "next_page_link": "{{url}}",
      "next_page_termination_strategy": [
        "empty-result"
      ],
      "params": {
        "$skip": "{% if is_first_page  %}0{% else %}{{previous_params['$top'] * page}}{% endif %}",
        "$top": 50,
        "fields": "id,login,fullName,email,name,online,avatarUrl,banned,tags(id,name,untagOnResolve,updateableBy(id,name),visibleFor(name,id),owner(id,login))"
      },
      "url": "api/users"
    },
    "workitems-list": {
      "id_expression": "{{ id }}",
      "method": "GET",
      "next_page_link": "{{url}}",
      "next_page_termination_strategy": [
        "empty-result"
      ],
      "params": {
        "$skip": "{% if is_first_page  %}0{% else %}{{previous_params['$top'] * page}}{% endif %}",
        "$top": 42,
        "fields": "id,author(id,name),creator(id,name),text,type(id),created,updated,duration(id,minutes,presentation),date,issue(id),attributes(id,value(id))"
      },
      "url": "api/workItems"
    }
  },
  "type": "system:rest",
  "url_pattern": "https://{{@ subdomain @}}.youtrack.cloud/%s",
  "verify_ssl": true
}